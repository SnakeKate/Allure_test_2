name: Falcon Nightly Smoke Tests for test

on:
  workflow_run:
    workflows: ["pages build and deployment"]
    types:
      - completed

jobs:
  tests:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        env_name: ['test']
    environment: 
      name: ${{ matrix.env_name }}
    steps: 
       - uses: actions/checkout@v4.1.6    
       - name: Install Node.js
         uses: actions/setup-node@v3
         with:
           node-version: '16'
      
       - run: npm install

       - name: Run tests
         run: npm test

       - name: Generating Artifact
         id: artifact
         uses: actions/upload-artifact@v4
         if: always()
         with:
          name: allure-results-${{ matrix.env_name }}
          path: ./allure-results
      

  report2:
    if: always()
    needs: tests
    strategy:
      fail-fast: false
      matrix:
        env_name: ['test']
    environment: 
      name: ${{ matrix.env_name }}
    runs-on: ubuntu-latest
    steps:

      - name: Install Allure CLI
        run: |
          curl -o allure-2.13.8.tgz -L https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.13.8/allure-commandline-2.13.8.tgz
          tar -zxvf allure-2.13.8.tgz
          sudo mv allure-2.13.8 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure
    
      - name: Repository Checkout
        uses: actions/checkout@v4
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
             
        
      - name: Install Netlify
        run: npm install netlify-cli@17.10.1 -g
      - name: Install Dependencies
        run: npm ci     


      - name: Download Build Artifacts
        id: download-artifacts
        uses: actions/download-artifact@v4.1.0
        with:
          name: allure-results-${{ matrix.env_name }}
          path: target./allure-results

      
      - name: Generate Allure Report
        run: allure generate target./allure-results --clean -o target./allure-report

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v3.0
        with:
          publish-dir: 'target./allure-report'
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_API_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          timeout-minutes: 1  
 
